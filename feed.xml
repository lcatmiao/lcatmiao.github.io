

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://0.0.0.0:4000/</id>
  <title>小黑猫</title>
  <subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle>
  <updated>2022-02-05T15:48:48+08:00</updated>
  <author>
    <name>小黑猫</name>
    <uri>http://0.0.0.0:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://0.0.0.0:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="http://0.0.0.0:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator>
  <rights> © 2022 小黑猫 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Jekyll Chirpy theme + Github搭建个人博客</title>
    <link href="http://0.0.0.0:4000/posts/Jekyll-Chirpy-theme-+-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/" rel="alternate" type="text/html" title="Jekyll Chirpy theme + Github搭建个人博客" />
    <published>2022-02-05T14:43:00+08:00</published>
  
    <updated>2022-02-05T14:43:00+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/Jekyll-Chirpy-theme-+-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <content src="http://0.0.0.0:4000/posts/Jekyll-Chirpy-theme-+-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/" />
    <author>
      <name>{"name"=>"小黑猫", "link"=>"https://github.com/lcatmiao"}</name>
    </author>

  
    
    <category term="学习" />
    
    <category term="杂知识" />
    
  

  
    <summary>
      





      本地写了不少markdown笔记，一直想自己建一个网站。最初的想法是完完全全自己写一个个人网站，全部自定义，不仅可以有技术笔记栏目还可以有其它记录感想，发表观点，发布工具的栏目。然而时间并不总是能自定义，总有些更优先的事项排在前面，加之自己技术水平还没成长到这个程度，于是退而求其次，选择已有框架搭建一个个人博客，先用之，毕竟都要毕业了，连个像样的博客都没有，实在说不过去。我并未放弃建站的想法，说不定以后就有了。

安装博客生成器

由于kali环境齐全，所以直接在kali下安装本地博客

# 安装jekyll
sudo gem install jekyll

# 安装chirpy主题
git clone git@github.com:cotes2020/jekyll-theme-chirpy.git

# 在jekyll-theme-chirpy目录下安装依赖
# 不需要sudo，命...
    </summary>
  

  </entry>

  
  <entry>
    <title>关于域名的各种名词叫法</title>
    <link href="http://0.0.0.0:4000/posts/%E5%85%B3%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E5%90%84%E7%A7%8D%E5%90%8D%E8%AF%8D%E5%8F%AB%E6%B3%95/" rel="alternate" type="text/html" title="关于域名的各种名词叫法" />
    <published>2022-01-29T17:31:10+08:00</published>
  
    <updated>2022-01-29T17:31:10+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/%E5%85%B3%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E5%90%84%E7%A7%8D%E5%90%8D%E8%AF%8D%E5%8F%AB%E6%B3%95/</id>
    <content src="http://0.0.0.0:4000/posts/%E5%85%B3%E4%BA%8E%E5%9F%9F%E5%90%8D%E7%9A%84%E5%90%84%E7%A7%8D%E5%90%8D%E8%AF%8D%E5%8F%AB%E6%B3%95/" />
    <author>
      <name>{"name"=>"小黑猫", "link"=>"https://github.com/lcatmiao"}</name>
    </author>

  
    
    <category term="学习" />
    
    <category term="杂知识" />
    
  

  
    <summary>
      





      关于域名有一些名词，比如域名、顶级域名、二级域名、三级域名、子域名、主机名等。自己总是搞不清这些名词具体指代什么，因为网上的资料总是有各种差别，同一个名词在不同的资料里有不同的解释，属实是迷惑。在查阅了很多资料后，决定做一个总结，尽可能涵盖各种说法，做一个自己理解的标准，以期在遇到这些说法时心里有底。

资料

基本概念 (aliyun.com)

Domain name - Wikipedia

What’s in a Domain Name? All About Domain Levels - Hover Blog

下面贴两段我认为有帮助的描述

阿里云产品文档

基本概念 (aliyun.com)

互联网名称与数字地址分配机构（ICANN）负责管理和协调国际互联网络域名系统。根据ICANN的定义，一个完整的域名至少有两个部分，各部分之间用“.”来分隔，最后一个“.”的右边部...
    </summary>
  

  </entry>

  
  <entry>
    <title>git如何合并分支</title>
    <link href="http://0.0.0.0:4000/posts/git%E5%A6%82%E4%BD%95%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF/" rel="alternate" type="text/html" title="git如何合并分支" />
    <published>2022-01-26T13:49:37+08:00</published>
  
    <updated>2022-01-26T13:49:37+08:00</updated>
  
    <id>http://0.0.0.0:4000/posts/git%E5%A6%82%E4%BD%95%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF/</id>
    <content src="http://0.0.0.0:4000/posts/git%E5%A6%82%E4%BD%95%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF/" />
    <author>
      <name>{"name"=>"小黑猫", "link"=>"https://github.com/lcatmiao"}</name>
    </author>

  
    
    <category term="学习" />
    
    <category term="git" />
    
  

  
    <summary>
      





      复制了官网文档中对git合并过程的描述，提取了有必要记录的部分；自己测试了一些关于合并冲突的例子，做一个简要总结。


  参考资料：Git 分支 - 分支的新建与合并


合并过程

快进(fast-forward)



现在要将hotfix分支合并到master分支。

$ git checkout master
$ git merge hotfix
Updating f42c576..3a0874c
Fast-forward
 index.html | 2 ++
 1 file changed, 2 insertions(+)


合并后如下图：



当你试图合并两个分支时， 如果顺着一个分支走下去能够到达另一个分支，那么 Git 在合并两者的时候， 只会简单的将指针向前推进（指针右移），因为这种情况下的合并操作没有需要解决的分歧——这就叫做 “快进（fast-forwar...
    </summary>
  

  </entry>

</feed>


